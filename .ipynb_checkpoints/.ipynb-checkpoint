{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "305\n"
     ]
    }
   ],
   "source": [
    "highway_number = int(input())\n",
    "h2 = str(highway_number)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "I-305 is auxiliary, serving I-5, going north/south.\n"
     ]
    }
   ],
   "source": [
    "if (highway_number % 2) == 0 and 1<=highway_number<=99:\n",
    "    print('I-'+str(highway_number),'is primary, going east/west.')\n",
    "elif (highway_number % 2) != 0 and 1<=highway_number<=99:\n",
    "    print('I-'+str(highway_number),'is primary, going north/south.')\n",
    "elif 99<highway_number<999 and (highway_number % 2) == 0:\n",
    "    if h2[-2] != 0:\n",
    "        print('I-'+str(highway_number),'is auxiliary, serving','I-'+h2[-2:]+',','going east/west.')\n",
    "    else:\n",
    "        print('I-'+str(highway_number),'is auxiliary, serving','I-'+h2[-1:]+',','going east/west.')\n",
    "elif 99<highway_number<999 and (highway_number % 2) != 0:\n",
    "    if h2[-2] == 0:\n",
    "        print('I-'+str(highway_number),'is auxiliary, serving','I-'+h2[-2:]+',','going north/south.')\n",
    "    else:\n",
    "        print('I-'+str(highway_number),'is auxiliary, serving','I-'+h2[-1:]+',','going north/south.') \n",
    "else:\n",
    "    print(highway_number,'is not a valid interstate highway number.')\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
